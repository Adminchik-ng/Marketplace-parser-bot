from aiogram import Router, types
from aiogram.filters import Command
from psycopg import AsyncConnection
from datetime import datetime
from database import db

summary_router = Router()

@summary_router.message(Command(commands=["summary"]))
async def cmd_summary(message: types.Message, conn: AsyncConnection):
    user_id = message.from_user.id

    try:
        products = await db.products.get_user_active_products_with_prices(conn, user_id=user_id)
    except Exception:
        await message.answer("‚ùå –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö.")
        return

    if not products:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤.")
        return

    today_str = datetime.now().strftime("%d.%m.%Y")
    lines = [f"üìä –û—Ç—á–µ—Ç –∑–∞ {today_str}:\n"]

    for idx, (
        product_id,
        product_name,
        product_url,
        target_price,
        current_price,
        min_price,
        marketplace,
    ) in enumerate(products, start=1):
        product_name_display = product_name or "–ø–æ–∫–∞ –Ω–µ –æ—Ç—Å–ª–µ–¥–∏–ª–∏üòî"
        
        if current_price:
            if current_price <= target_price:
                status_line = "‚úÖ –¶–µ–ª—å –¥–æ—Å—Ç–∏–≥–Ω—É—Ç–∞!"
                diff_line = ""
            else:
                diff = current_price - target_price
                status_line = ""
                diff_line = f"üéØ –î–æ —Ü–µ–ª–∏: -{diff} ‚ÇΩ ({target_price} ‚ÇΩ)"

            lines.append(
                f"{idx}. [{marketplace}]\n"
                f"üÜî –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {product_name_display}\n"
                f"{status_line}\n"
                f"üí∞ –¢–µ–∫—É—â–∞—è: {current_price} ‚ÇΩ | üìâ –ú–∏–Ω–∏–º—É–º: {min_price} ‚ÇΩ\n"
                f"{diff_line}"
            )
        else:
            lines.append(
            f"{idx}. [{marketplace}]\n"
            f"üÜî –ù–∞–∑–≤–∞–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞: {product_name_display}\n"
            f"‚ÑπÔ∏è –î–∞–Ω–Ω—ã–µ –æ —Ü–µ–Ω–µ –µ—â–µ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã.\n"
            f"üîó –°—Å—ã–ª–∫–∞: {product_url}\n"
        )

    report = "\n".join(line for line in lines if line.strip())  # –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
    await message.answer(report)
